import { OnModuleInit } from '@nestjs/common';
import { Counter, Histogram, Gauge, Summary } from 'prom-client';
export declare class MetricsService implements OnModuleInit {
    readonly translationCounter: Counter<"direction" | "source_lang" | "target_lang" | "status">;
    readonly translationDuration: Histogram<"direction" | "source_lang" | "target_lang">;
    readonly translationErrors: Counter<"direction" | "error_type">;
    readonly audioRequestsCounter: Counter<"status" | "audio_type">;
    readonly audioFilesServed: Counter<"file_type">;
    readonly datasetOperations: Counter<"status" | "operation" | "dataset_type">;
    readonly dictionaryLookups: Counter<"lookup_type" | "found">;
    readonly httpRequestDuration: Histogram<"method" | "route" | "status_code">;
    readonly httpRequestsTotal: Counter<"method" | "route" | "status_code">;
    readonly cacheOperations: Counter<"operation" | "cache_type" | "result">;
    readonly cacheHitRatio: Gauge<"cache_type">;
    readonly translationQualityScore: Summary<"direction" | "evaluation_method">;
    readonly activeUsers: Gauge<string>;
    readonly sessionsTotal: Counter<"session_type">;
    readonly huggingfaceOperations: Counter<"status" | "operation">;
    readonly huggingfaceResponseTime: Histogram<"operation">;
    readonly datasetTotalEntries: Gauge<"dataset_type" | "dataset_name">;
    readonly datasetUniqueWords: Gauge<"dataset_type" | "dataset_name" | "language">;
    readonly datasetAverageWordsPerEntry: Gauge<"dataset_type" | "dataset_name" | "language">;
    readonly datasetCacheStatus: Gauge<"dataset_type" | "dataset_name">;
    readonly datasetCacheSize: Gauge<"dataset_type" | "dataset_name">;
    readonly datasetLoadStatus: Gauge<"dataset_type" | "dataset_name" | "is_active">;
    readonly datasetLastUpdateTime: Gauge<"dataset_type" | "dataset_name">;
    readonly audioDatasetTotalDuration: Gauge<"dataset_name">;
    readonly audioDatasetAverageDuration: Gauge<"dataset_name">;
    readonly audioFilesDownloaded: Gauge<"dataset_name">;
    readonly audioFilesDownloadProgress: Gauge<"dataset_name">;
    readonly huggingfaceSourcesTotal: Gauge<"source_type">;
    readonly huggingfaceSourcesActive: Gauge<"source_type">;
    readonly totalWayuuWords: Gauge<string>;
    readonly totalSpanishWords: Gauge<string>;
    readonly totalAudioMinutes: Gauge<string>;
    readonly totalPhrases: Gauge<string>;
    readonly totalTranscribed: Gauge<string>;
    readonly totalDictionaryEntries: Gauge<string>;
    readonly totalAudioFiles: Gauge<string>;
    readonly growthLastUpdateTimestamp: Gauge<string>;
    onModuleInit(): void;
    getMetrics(): Promise<string>;
    incrementTranslation(direction: string, sourceLang: string, targetLang: string, status: string): void;
    recordTranslationDuration(direction: string, sourceLang: string, targetLang: string, duration: number): void;
    incrementTranslationError(errorType: string, direction: string): void;
    incrementAudioRequest(audioType: string, status: string): void;
    incrementDictionaryLookup(lookupType: string, found: boolean): void;
    recordHttpRequest(method: string, route: string, statusCode: string, duration: number): void;
    incrementCacheOperation(operation: string, cacheType: string, result: string): void;
    updateCacheHitRatio(cacheType: string, ratio: number): void;
    setActiveUsers(count: number): void;
    incrementHuggingfaceOperation(operation: string, status: string): void;
    recordHuggingfaceResponseTime(operation: string, duration: number): void;
    updateDatasetTotalEntries(datasetName: string, datasetType: string, entries: number): void;
    updateDatasetUniqueWords(datasetName: string, language: string, datasetType: string, words: number): void;
    updateDatasetAverageWordsPerEntry(datasetName: string, language: string, datasetType: string, average: number): void;
    updateDatasetCacheStatus(datasetName: string, datasetType: string, isAvailable: boolean): void;
    updateDatasetCacheSize(datasetName: string, datasetType: string, sizeBytes: number): void;
    updateDatasetLoadStatus(datasetName: string, datasetType: string, isActive: boolean, isLoaded: boolean): void;
    updateDatasetLastUpdateTime(datasetName: string, datasetType: string, timestamp: number): void;
    updateAudioDatasetTotalDuration(datasetName: string, totalDurationSeconds: number): void;
    updateAudioDatasetAverageDuration(datasetName: string, averageDurationSeconds: number): void;
    updateAudioFilesDownloaded(datasetName: string, downloadedCount: number): void;
    updateAudioDownloadProgress(datasetName: string, progressPercent: number): void;
    updateHuggingfaceSourcesTotal(sourceType: string, total: number): void;
    updateHuggingfaceSourcesActive(sourceType: string, active: number): void;
    updateTotalWayuuWords(totalWords: number): void;
    updateTotalSpanishWords(totalWords: number): void;
    updateTotalAudioMinutes(totalMinutes: number): void;
    updateTotalPhrases(totalPhrases: number): void;
    updateTotalTranscribed(totalTranscribed: number): void;
    updateTotalDictionaryEntries(totalEntries: number): void;
    updateTotalAudioFiles(totalFiles: number): void;
    updateGrowthLastUpdateTimestamp(timestamp: number): void;
    updateGrowthMetric(metricName: string, value: number): void;
}
